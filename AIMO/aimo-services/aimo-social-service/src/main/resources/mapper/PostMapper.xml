<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aimo.social.mapper.PostMapper">

    <!-- 作用是模糊化名，使用resultMap时可以通过别名来引用对应的字段。 -->
    <resultMap id="PostResultMap" type="com.aimo.social.entity.Post">
        <id property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="create_time"/>
        <result property="updatedAt" column="update_time"/>
        <result property="visibility" column="visibility"/>
        <result property="imageUrls" column="image_urls"/>
    </resultMap>

    <!-- 插入新的帖子，parameterType指定了参数类型 -->
    <insert id="insertPost" parameterType="com.aimo.social.entity.Post">
        INSERT INTO post(user_id, content,image_urls, visibility)
        VALUES (#{userId}, #{content}, #{imageUrls}, #{visibility})
    </insert>

    <!-- 根据postId查询帖子 ,resultMap指定了结果映射,决定了用哪个方式转换成实体类 -->
    <select id="selectPostByPostId" resultMap="PostResultMap">
        SELECT * FROM post WHERE post_id = #{postId}
    </select>
    <select id="selectPostByUserId" resultMap="PostResultMap">
        SELECT * FROM post WHERE user_id = #{userId}
    </select>
    <select id="selectAllPosts" resultMap="PostResultMap">
        SELECT * FROM post ORDER BY created_at DESC
    </select>
    <update id="updatePostByPostId" parameterType="com.aimo.social.entity.Post">
        UPDATE post
        SET content = #{content},
            image_urls = #{imageUrls},
            visibility = #{visibility},
            updated_at = CURRENT_TIMESTAMP
        WHERE post_id = #{postId}
    </update>
<!--    &lt;!&ndash; 新增通过userId更新帖子的SQL &ndash;&gt;-->
<!--    <update id="updatePost" parameterType="com.aimo.social.entity.Post">-->
<!--        UPDATE post-->
<!--        SET content = #{content},-->
<!--            image_urls = #{imageUrls},-->
<!--            visibility = #{visibility},-->
<!--            updated_at = CURRENT_TIMESTAMP-->
<!--        WHERE user_id = #{userId}-->
<!--    </update>-->

    <delete id="deletePostById">
        DELETE FROM post WHERE post_id = #{postId}
    </delete>
</mapper>
